/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Numeric = ColumnType<string, number | string, number | string>;

export type ProductCondition =
  | "Damaged"
  | "New"
  | "Used - Fair"
  | "Used - Like New"
  | "Used - Old";

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface Products {
  condition: ProductCondition;
  created_at: Generated<Timestamp | null>;
  description: string | null;
  id: Generated<number>;
  is_sold: Generated<boolean>;
  name: string;
  price: Numeric;
  product_type_id: number | null;
  user_id: number | null;
  uuid: Generated<string>;
  years: number;
}

export interface ProductTypes {
  category: string;
  id: Generated<number>;
  name: string;
}

export interface Users {
  created_at: Generated<Timestamp | null>;
  email: string | null;
  id: Generated<number>;
  name: string;
  phone: string | null;
}

export interface DB {
  product_types: ProductTypes;
  products: Products;
  users: Users;
}
